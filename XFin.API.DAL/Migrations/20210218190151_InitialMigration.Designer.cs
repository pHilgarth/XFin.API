// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using XFin.API.DAL.DbContexts;

namespace XFin.API.DAL.Migrations
{
    [DbContext(typeof(XFinDbContext))]
    [Migration("20210218190151_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("XFin.API.Core.Entities.BankAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bank")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DepositorId")
                        .HasColumnType("int");

                    b.Property<string>("Iban")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepositorId");

                    b.ToTable("BankAccounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountNumber = "71808000",
                            AccountType = "Konto",
                            Bank = "Volksbank-Raiffeisenbank Laupheim-Illertal eG",
                            Bic = "GENODES1VBL",
                            DepositorId = 1,
                            Iban = "DE66654913200071808000"
                        },
                        new
                        {
                            Id = 2,
                            AccountNumber = "71808019",
                            AccountType = "Konto",
                            Bank = "Volksbank-Raiffeisenbank Laupheim-Illertal eG",
                            Bic = "GENODES1VBL",
                            DepositorId = 1,
                            Iban = "DE214913200071808019"
                        },
                        new
                        {
                            Id = 3,
                            AccountNumber = "71808400",
                            AccountType = "Sparkonto",
                            Bank = "Volksbank-Raiffeisenbank Laupheim-Illertal eG",
                            Bic = "GENODES1VBL",
                            DepositorId = 1,
                            Iban = "DE45654913200071808400"
                        },
                        new
                        {
                            Id = 4,
                            AccountNumber = "27911004",
                            AccountType = "Girokonto",
                            Bank = "Volksbank-Raiffeisenbank Laupheim-Illertal eG",
                            Bic = "GENODES1VBL",
                            DepositorId = 2,
                            Iban = "DE45654913200027911004"
                        },
                        new
                        {
                            Id = 5,
                            AccountNumber = "27911403",
                            AccountType = "Sparkonto",
                            Bank = "Volksbank-Raiffeisenbank Laupheim-Illertal eG",
                            Bic = "GENODES1VBL",
                            DepositorId = 2,
                            Iban = "DE45654913200027911403"
                        });
                });

            modelBuilder.Entity("XFin.API.Core.Entities.Depositor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("Depositors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Patrick Hilgarth"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Ilona Schuhmacher"
                        });
                });

            modelBuilder.Entity("XFin.API.Core.Entities.BankAccount", b =>
                {
                    b.HasOne("XFin.API.Core.Entities.Depositor", "Depositor")
                        .WithMany("BankAccounts")
                        .HasForeignKey("DepositorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Depositor");
                });

            modelBuilder.Entity("XFin.API.Core.Entities.Depositor", b =>
                {
                    b.Navigation("BankAccounts");
                });
#pragma warning restore 612, 618
        }
    }
}
